{
	"info": {
		"_postman_id": "0609cbb2-71cf-44f1-8fd0-3d26a4d1486d",
		"name": "IMDB Experience",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44367729"
	},
	"item": [
		{
			"name": "Get all mediaitems",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all mediaitems\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    let json = pm.response.json();\r",
							"    pm.expect(json.length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get mediaitem by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get mediaitem by ID\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    let json = pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"_id\");\r",
							"    pm.expect(json).to.have.property(\"titre\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/tt0035423",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						"tt0035423"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get mediaitems by criterias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Search mediaitems with filters\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    let items = pm.response.json();\r",
							"    pm.expect(items).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/recherche?type=movie&annee=2002&genre=Comedy",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						"recherche"
					],
					"query": [
						{
							"key": "type",
							"value": "movie"
						},
						{
							"key": "annee",
							"value": "2002"
						},
						{
							"key": "genre",
							"value": "Comedy"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create mediaitem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create mediaitem\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    let item = pm.response.json();\r",
							"    pm.expect(item).to.have.property(\"_id\");\r",
							"    pm.expect(item).to.have.property(\"titre\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"_id\": \"tt9999999\",\r\n    \"titre\" : \"Homemade Film par moi de moi\",\r\n    \"type\" : \"movie\",\r\n    \"annee\": 2025,\r\n    \"duree\": 100,\r\n    \"genres\": [\"Comedy\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/mediaitem",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mediaitem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update mediaitem\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"_id\": \"tt9999999\",\r\n    \"titre\" : \"Homemade Film par moi de moi\",\r\n    \"type\" : \"movie\",\r\n    \"annee\": 2025,\r\n    \"duree\": 200,\r\n    \"genres\": [\"Drama\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/tt9999999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						"tt9999999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete mediaitem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete mediaitem\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/tt9999999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						"tt9999999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create user\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    let user = pm.response.json();\r",
							"    pm.expect(user).to.have.property(\"_id\");\r",
							"    pm.expect(user).to.have.property(\"username\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"_id\" : \"222000000000000000000002\",\r\n    \"username\": \"mathieu\", \r\n    \"password\": \"salut123\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/user/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get user by ID\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    let user = pm.response.json();\r",
							"    pm.expect(user).to.have.property(\"_id\");\r",
							"    pm.expect(user).to.have.property(\"username\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/user/222000000000000000000002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"user",
						"222000000000000000000002"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update user\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{    \r\n    \"_id\": \"222000000000000000000002\",\r\n    \"username\": \"mathieu\",\r\n    \"password\": \"salut321\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/user/222000000000000000000002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"user",
						"222000000000000000000002"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete user\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/user/222000000000000000000002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"user",
						"222000000000000000000002"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create mediastatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create mediastatus\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    let status = pm.response.json();\r",
							"    pm.expect(status).to.have.property(\"_id\");\r",
							"    pm.expect(status).to.have.property(\"userId\");\r",
							"    pm.expect(status).to.have.property(\"mediaId\");\r",
							"    pm.expect(status).to.have.property(\"status\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"_id\" : \"333000000000000000000001\",\r\n  \"userId\": \"222000000000000000000001\",\r\n  \"mediaId\": \"tt0035423\",\r\n  \"status\": \"Favorite\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/mediastatus",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediastatus"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all mediastatuses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all mediastatuses\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    let statuses = pm.response.json();\r",
							"    pm.expect(statuses).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediastatus/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediastatus",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get mediastatus by user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get mediastatuses by user\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    let statuses = pm.response.json();\r",
							"    pm.expect(statuses).to.be.an(\"array\");\r",
							"    statuses.forEach(s => {\r",
							"        pm.expect(s).to.have.property(\"userId\");\r",
							"        pm.expect(s).to.have.property(\"mediaId\");\r",
							"        pm.expect(s).to.have.property(\"status\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediastatus/user/222000000000000000000001",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediastatus",
						"user",
						"222000000000000000000001"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mediastatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update mediastatus\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"_id\": \"333000000000000000000001\",\r\n        \"userId\": \"222000000000000000000001\",\r\n        \"mediaId\": \"tt0035423\",\r\n        \"status\": \"Seen\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/mediastatus/333000000000000000000001",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediastatus",
						"333000000000000000000001"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get stats statuses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Stats - status counts\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data).to.be.an(\"object\");\r",
							"    Object.keys(data).forEach(k => {\r",
							"        pm.expect(data[k]).to.be.a(\"number\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/stats/statuses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"stats",
						"statuses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all mediaItems in a user's list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all mediaItems with status for user\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const list = pm.response.json();\r",
							"    pm.expect(list).to.be.an(\"array\");\r",
							"    list.forEach(e => {\r",
							"        pm.expect(e).to.have.property(\"media\");\r",
							"        pm.expect(e).to.have.property(\"status\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/user/222000000000000000000001/medias",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"user",
						"222000000000000000000001",
						"medias"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all favorited mediaItems in a user's list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const mediaStatus = {\r",
							"    userId: \"222000000000000000000001\",\r",
							"    mediaId: \"tt0035423\",\r",
							"    status: \"Favorite\"\r",
							"};\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: \"http://localhost:5198/api/mediastatus\",\r",
							"    method: \"POST\",\r",
							"    header: {\r",
							"        \"Content-Type\": \"application/json\"\r",
							"    },\r",
							"    body: {\r",
							"        mode: \"raw\",\r",
							"        raw: JSON.stringify(mediaStatus)\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    console.log(\"favorite created pour tt0035423\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get favorited mediaItems\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"At least one item returned\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/user/222000000000000000000001/medias/favorite",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"user",
						"222000000000000000000001",
						"medias",
						"favorite"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get genres of a mediaItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get genres of mediaItem\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const genres = pm.response.json();\r",
							"    pm.expect(genres).to.be.an(\"array\");\r",
							"    genres.forEach(g => pm.expect(g).to.have.property(\"nom\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/tt0035423/genres",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						"tt0035423",
						"genres"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete mediastatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete mediastatus\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediastatus/333000000000000000000001",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediastatus",
						"333000000000000000000001"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by type + keyword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Search mediaItem by type + filters\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const results = pm.response.json();\r",
							"    pm.expect(results).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/recherche?type=movie&keyword=love",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						"recherche"
					],
					"query": [
						{
							"key": "type",
							"value": "movie"
						},
						{
							"key": "keyword",
							"value": "love"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get stats totals",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Stats - total counts\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const data = pm.response.json();\r",
							"    [\"users\", \"mediaItems\", \"mediaStatuses\"].forEach(k => {\r",
							"        pm.expect(data).to.have.property(k);\r",
							"        pm.expect(data[k]).to.be.a(\"number\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/stats/totals",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"stats",
						"totals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get partial projection",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get mediaItems partial projection\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const items = pm.response.json();\r",
							"    pm.expect(items).to.be.an(\"array\");\r",
							"    items.forEach(m => {\r",
							"        pm.expect(m).to.have.property(\"titre\");\r",
							"        pm.expect(m).to.have.property(\"annee\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/mediaitem/partial",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaitem",
						"partial"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get fav genres for a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get favorite genres for user\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/stats/user/222000000000000000000001/topgenres",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"stats",
						"user",
						"222000000000000000000001",
						"topgenres"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get mediaItem seen per year",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get mediaItem count per year\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/stats/222000000000000000000001/activity-by-year",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"stats",
						"222000000000000000000001",
						"activity-by-year"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get mediaItem per average duration for a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get media average duration for user\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5198/api/stats/222000000000000000000001/average-duration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"stats",
						"222000000000000000000001",
						"average-duration"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create mediaItem, create genres, link the two",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create media + genres\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Media ID returned\", function () {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"_id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"_id\": \"tt9999999\",\r\n  \"titre\": \"Test Movie Transaction\",\r\n  \"type\": \"movie\",\r\n  \"annee\": 2025,\r\n  \"duree\": 110,\r\n  \"genres\": [\"Drama\", \"Adventure\", \"Mythical\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/mediaItem/complet",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaItem",
						"complet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create mediaItem, create genres, link the two (transaction)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Transactional create media + genres\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Media ID returned (txn)\", function () {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"_id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"_id\": \"tt9999992\",\r\n  \"titre\": \"Test Transaction Movie\",\r\n  \"type\": \"movie\",\r\n  \"annee\": 2024,\r\n  \"duree\": 123,\r\n  \"genres\": [\"TestGenreA\", \"TestGenreB\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5198/api/mediaItem/complet",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5198",
					"path": [
						"api",
						"mediaItem",
						"complet"
					]
				}
			},
			"response": []
		}
	]
}